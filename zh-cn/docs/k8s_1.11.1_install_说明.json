{
  "filename": "k8s_1.11.1_install_说明.md",
  "__html": "<p>-----------------k8s 1.11.1 离线安装----------------------\n#注意：必须centos 7以上系统</p>\n<h2>1，安装 ipvsadm  (所有server)</h2>\n<p>yum install -y ipvsadm\nipvsadm -ln   #安装完在验证</p>\n<h2>2，修改/同步系统时间</h2>\n<p>/usr/sbin/ntpdate <a href=\"http://1.asia.pool.ntp.org\">1.asia.pool.ntp.org</a>\ncrontab -e\n0 */4 * * * /usr/sbin/ntpdate <a href=\"http://1.asia.pool.ntp.org\">1.asia.pool.ntp.org</a>;/usr/sbin/hwclock -w\ncrontab -l</p>\n<h2>3, 升级内核</h2>\n<p>rpm -Uvh <a href=\"http://www.elrepo.org/elrepo-release-7.0-2.el7.elrepo.noarch.rpm\">http://www.elrepo.org/elrepo-release-7.0-2.el7.elrepo.noarch.rpm</a> ;yum --enablerepo=elrepo-kernel install  kernel-lt-devel kernel-lt -y\n#查看默认启动顺序\n[commond:]# awk -F' '$1==&quot;menuentry &quot; {print $2}' /etc/grub2.cfg</p>\n<pre><code>  CentOS Linux (4.4.4-1.el7.elrepo.x86_64) 7 (Core)  \n  CentOS Linux (3.10.0-327.10.1.el7.x86_64) 7 (Core)  \n  CentOS Linux (0-rescue-c52097a1078c403da03b8eddeac5080b) 7 (Core)\n</code></pre>\n<p>#默认启动的顺序是从0开始，新内核是从头插入（目前位置在0，而4.4.4的是在1），所以需要选择0。\n[commond:]# grub2-set-default 0<br>\n#重启\n[commond:]# reboot\n#检查内核，成功升级到4.4\n[commond:]# uname -a\nLinux bigdata5 4.4.104-1.el7.elrepo.x86_64 #1 SMP Tue Dec 5 12:46:32 EST 2017 x86_64 x86_64 x86_64 GNU/Linux</p>\n<h2>4，安装 docker (所有server)</h2>\n<p>yum install -y docker-ce      #18.03版本默认 文件系统为ovelay2驱动\nyum install yum-plugin-ovl -y</p>\n<h2>5，修改主机名/ssh/绑定主机名 免密钥登录</h2>\n<p>hostnamectl set-hostname  #注意：主机名，不能用特殊符号(比如：<a href=\"http://jmsw-xx.hnser.com\">jmsw-xx.hnser.com</a>)，可直接(node1)这种就可以。\nvim /etc/hosts     #绑定主机名\n##vim .ssh/authorized_keys  #创建免密钥登录 “可不用”</p>\n<h2>6，查看确保内核开启了ipvs模块 (所有node)</h2>\n<h2>lsmod|grep ip_vs</h2>\n<h2>ip_vs                 141432  1 xt_ipvs\nnf_conntrack          133053  7 ip_vs,nf_nat,nf_nat_ipv4,xt_conntrack,nf_nat_masquerade_ipv4,nf_conntrack_netlink,nf_conntrack_ipv4\nlibcrc32c              12644  4 xfs,ip_vs,nf_nat,nf_conntrack</h2>\n<p>（如果上面执行不成功的话，那就直接   yum install -y ipvsadm）</p>\n<h3>解压 tar xvf kube1.11.1.tar.gz</h3>\n<p>tar xvf kube1.11.1.tar.gz</p>\n<h2>7，master 上执行脚本</h2>\n<p>cd shell &amp;&amp; sh <a href=\"http://init.sh\">init.sh</a> &amp;&amp; sh <a href=\"http://master.sh\">master.sh</a>\n#执行完会出现一个kubeadm join 命令，然后在每个node执行。</p>\n<h2>8，node 上执行脚本</h2>\n<p>cd shell &amp;&amp; sh <a href=\"http://init.sh\">init.sh</a><br>\n#注意：\n在node上执行master输出的join命令即可 (命令忘记了可以用这个查看，kubeadm token create —print–join-command)\nkubeadm join master_ip:6443 --token ynawdb.boyq3jb36pkykkvq --discovery-token-ca-cert-hash</p>\n<h2>9，验证dashboard</h2>\n<p>https://server_ip:32000</p>\n<h2>9，如果需要节点执行kubectl get 相关命令</h2>\n<p>把 master 文件拷贝到各节点\nscp -r .kube <a href=\"http://192.168.xxx\">192.168.xxx</a>:/root</p>\n<p>#注意：\n这里十分推荐大家使用ipvs模式，iptables出了问题不好调试，而且规则一多性能显著下降，我们甚至出现规则丢失的情况，ipvs稳定很多。</p>\n<p>节点报错：file_linux.go:61] Unable to read config path &quot;/etc/kubernetes/manifests&quot;: path does not exist, ignoring\n解决办法：mkdir -p /etc/kubernetes/manifests</p>\n<p>重启命令：\nswapoff -a&amp;&amp; setenforce 0&amp;&amp;systemctl start kubelet\netcdctl cluster-healthy</p>\n<p>#coreDNS默认安装</p>\n",
  "title": "K8S 安装",
  "keywords": "自动化  K8S  DEVOPS",
  "description": "K8S自动化安装"
}